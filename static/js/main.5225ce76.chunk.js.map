{"version":3,"sources":["components/Card.js","components/Title.js","components/Paragraph.js","components/Form.js","components/InputButton.js","components/Error.js","containers/ErrorClass.js","components/InputText.js","components/InputEmail.js","components/InputPassword.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","children","className","Title","Paragraph","Form","onSubmit","handleSubmit","register","InputButton","value","type","handleClick","onClick","Error","errors","validate","name","message","setErrorClass","validated","InputText","placeholder","required","InputEmail","pattern","InputPassword","App","useForm","formState","data","alert","JSON","stringify","href","event","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5225ce76.chunk.js","sourcesContent":["/** \r\n * @author: alexandercds\r\n * @description: \r\n * @date: 10/septiembre/2021\r\n**/ \r\n\r\nconst Card = (props) => {\r\n    const { children } = props;\r\n    return (\r\n        <div className=\"card\"> \r\n            <div className=\"card-body\">\r\n                { children }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","/** \r\n * @author: alexandercds\r\n * @description: \r\n * @date: 10/septiembre/2021\r\n**/ \r\n\r\nconst Title = (props) => {\r\n    const { children } = props\r\n    return (\r\n        <div className=\"title\">\r\n            <h2>\r\n                { children }\r\n            </h2>\r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default Title;","/** \r\n * @author: alexandercds\r\n * @description: \r\n * @date: 10/septiembre/2021\r\n**/ \r\n\r\nconst Paragraph = (props) => {\r\n    const { children } = props\r\n    return (\r\n        <div className=\"paragraph\">\r\n            <p>\r\n                { children }\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default Paragraph;","/** \r\n * @author: alexandercds\r\n * @description: \r\n * @date: 10/septiembre/2021\r\n**/ \r\nimport { useForm } from 'react-hook-form';\r\n\r\nconst Form = (props) => {\r\n    const { children, onSubmit, handleSubmit, register } = props\r\n    \r\n    return (\r\n        <div className=\"form\"> \r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                { children }\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default Form;\r\n  ","/** \r\n * @author: alexandercds\r\n * @description: \r\n * @date: 10/septiembre/2021\r\n**/ \r\nimport { useForm } from 'react-hook-form';\r\n\r\nconst InputButton = (props) => {\r\n    const { className, value, type = \"submit\", handleClick } = props \r\n    return (\r\n        <div className=\"button\">  \r\n            <input \r\n                className={`btn ${className}`} \r\n                onClick={handleClick}\r\n                type={type} value={value}/> \r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default InputButton;\r\n  ","/** \r\n * @author: alexandercds\r\n * @description: \r\n * @date: 10/septiembre/2021\r\n**/ \r\n\r\nconst Error = (props) => {\r\n    const { errors, validate, name } = props;\r\n    return (\r\n        errors?.[name] && errors?.[name].type === validate ? ( \r\n            <>\r\n                <i className=\"error-icon\" />\r\n                <span className=\"error\">{errors?.[name].message}</span>\r\n                </>\r\n        ) : (\r\n            null\r\n        )\r\n    )\r\n}\r\n  \r\nexport default Error;\r\n  ","/** \r\n * @author: alexandercds\r\n * @description: \r\n * @date: 10/septiembre/2021\r\n**/ \r\n\r\nexport const setErrorClass = ({name, errors, validated = \"required\"}) => {\r\n    return errors?.[name] && errors?.[name].type ===  validated\r\n    ? 'error'\r\n    : '';\r\n}\r\n\r\nexport default setErrorClass;","/** \r\n * @author: alexandercds\r\n * @description: \r\n * @date: 10/septiembre/2021\r\n**/ \r\nimport Error from './Error';\r\nimport {setErrorClass} from '../containers/ErrorClass';\r\n\r\nconst InputText = (props) => {\r\n    const { placeholder, register, name, required, errors} = props;\r\n    return (\r\n        <div className=\"input-text\">  \r\n            <input \r\n            placeholder={placeholder} \r\n            className={`input ${setErrorClass({name, errors, required: 'required'})}`} \r\n            type=\"text\" \r\n            {...register(name, { \r\n                required: {\r\n                    value: required, \r\n                    message: `${placeholder} cannot be empty`\r\n                }, \r\n            })}/> \r\n            {required && (\r\n                <Error  \r\n                errors={errors}\r\n                validate=\"required\"\r\n                name={name} />\r\n            )}  \r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default InputText;","/** \r\n * @author: alexandercds\r\n * @description: \r\n * @date: 10/septiembre/2021\r\n**/ \r\nimport Error from './Error';\r\nimport {setErrorClass} from '../containers/ErrorClass';\r\n\r\nconst InputEmail = (props) => {\r\n    const { placeholder, register, name, required, errors} = props;\r\n    return (\r\n        <div className=\"input-text\">  \r\n            <input \r\n            placeholder={placeholder} \r\n            className={\r\n                `input \r\n                ${setErrorClass({name, errors, validated: 'required'})} \r\n                ${setErrorClass({name, errors, validated: 'pattern'})}`\r\n            } \r\n            type=\"text\" \r\n            {...register(name, { \r\n                required: {\r\n                    value: required, \r\n                    message: `${placeholder} cannot be empty`\r\n                }, \r\n                pattern: {\r\n                    value: /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/i, \r\n                    message: `Looks like this is not an email`\r\n                }\r\n            })}/> \r\n            {required && (\r\n                <Error  \r\n                errors={errors}\r\n                validate=\"required\"\r\n                name={name} />\r\n            )}  \r\n            <Error  \r\n            errors={errors}\r\n            validate=\"pattern\"\r\n            name={name} />\r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default InputEmail;","/** \r\n * @author: alexandercds\r\n * @description: \r\n * @date: 10/septiembre/2021\r\n**/ \r\nimport Error from './Error';\r\nimport {setErrorClass} from '../containers/ErrorClass';\r\n\r\nconst InputPassword = (props) => {\r\n    const { placeholder, register, name, required, errors} = props;\r\n    return (\r\n        <div className=\"input-text\">  \r\n            <input \r\n            placeholder={placeholder} \r\n            className={`input ${setErrorClass({name, errors, required: 'required'})}`}  \r\n            type=\"password\" \r\n            {...register(name, { \r\n                required: {\r\n                    value: required, \r\n                    message: `${placeholder} cannot be empty`\r\n                }, \r\n            })}/> \r\n            {required && (\r\n                <Error  \r\n                errors={errors}\r\n                validate=\"required\"\r\n                name={name} />\r\n            )}  \r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default InputPassword;","/** \n * @author: alexandercds\n * @description:  \n * @date 10/septiembre/2021\n**/\nimport React, { useState } from 'react';  \nimport { useForm } from 'react-hook-form';\nimport './assets/sass/App.scss';\nimport Card from './components/Card';\nimport Title from './components/Title';\nimport Paragraph from './components/Paragraph';\nimport Form from './components/Form';\nimport InputButton from './components/InputButton';\nimport InputText from './components/InputText';\nimport InputEmail from './components/InputEmail';\nimport InputPassword from './components/InputPassword';\n\nconst App = (props) => {\n    const { register, handleSubmit, formState: { errors } } = useForm();\n    const onSubmit = (data) => {\n        alert(`${JSON.stringify(data)}`);   \n    }\n    const handleTerms = (event) => {\n\n    }\n    return (\n        <section className=\"container\">\n            <div className=\"content\">\n                <div className=\"col\">\n                    <Title>\n                        Learn to code by\n                        watching others\n                    </Title>\n                    <Paragraph>\n                        See how experienced developers solve problems in real-time\n                        Watchinmg scripted tutorials is great, but understanding how\n                        developers think is invaluable.\n                    </Paragraph>\n                </div>\n                <div className=\"col\">\n                    <Card></Card>\n                    <Card>\n                        <div className=\"head\"> \n                            Try it free 7 days <span>the $20/mo. thereafter</span>\n                        </div>\n                        <Form \n                        register={register}\n                        handleSubmit={handleSubmit}\n                        onSubmit={onSubmit}>\n                            <InputText\n                            placeholder=\"First Name\"\n                            name=\"firstName\"\n                            errors={errors} \n                            required={true}\n                            register={register} /> \n                            <InputText\n                            placeholder=\"Last Name\"\n                            name=\"lastName\"\n                            errors={errors} \n                            required={true}\n                            register={register} /> \n                            <InputEmail\n                            placeholder=\"Email Address\"\n                            name=\"email\"\n                            errors={errors} \n                            required={true}\n                            register={register} /> \n                            <InputPassword\n                            placeholder=\"Password\"\n                            name=\"lastName\"\n                            errors={errors} \n                            required={true}\n                            register={register} />\n                            <InputButton \n                            value=\"Claim your free trial\"/>\n                            <div className=\"footer\">\n                                <span className=\"text\">\n                                    By clickthe button, you are agreeing to our \n                                    <a href=\"#\" onClick={handleTerms}>Terms and Service</a>\n                                </span>\n                            </div>\n                        </Form>\n                    </Card> \n                </div>\n            </div>\n        </section>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}